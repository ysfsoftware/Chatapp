[{"D:\\React\\ChatApp\\chatapp\\src\\index.js":"1","D:\\React\\ChatApp\\chatapp\\src\\reportWebVitals.js":"2","D:\\React\\ChatApp\\chatapp\\src\\App.js":"3","D:\\React\\ChatApp\\chatapp\\src\\Services\\firebase.js":"4","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Home\\Home.js":"5","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Chat\\Chat.js":"6","D:\\React\\ChatApp\\chatapp\\src\\Pages\\SignUp\\Signup.js":"7","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\Login.js":"8","D:\\React\\ChatApp\\chatapp\\src\\Components\\Header.js":"9","D:\\React\\ChatApp\\chatapp\\src\\Components\\Footer.js":"10","D:\\React\\ChatApp\\chatapp\\src\\ProjectImages\\ProjectImages.js":"11","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\LoginStrings.js":"12","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Profile\\Profile.js":"13","D:\\React\\ChatApp\\chatapp\\src\\Pages\\ChatBox\\ChatBox.js":"14","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Welcome\\Welcome.js":"15"},{"size":501,"mtime":1607865210162,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":2532,"mtime":1607864855797,"results":"19","hashOfConfig":"17"},{"size":565,"mtime":1607494963414,"results":"20","hashOfConfig":"17"},{"size":1638,"mtime":1607580076390,"results":"21","hashOfConfig":"17"},{"size":11081,"mtime":1609009925646,"results":"22","hashOfConfig":"17"},{"size":6080,"mtime":1609008658915,"results":"23","hashOfConfig":"17"},{"size":7739,"mtime":1609008791865,"results":"24","hashOfConfig":"17"},{"size":752,"mtime":1609009237744,"results":"25","hashOfConfig":"17"},{"size":566,"mtime":1607494781648,"results":"26","hashOfConfig":"17"},{"size":402,"mtime":1608291342396,"results":"27","hashOfConfig":"17"},{"size":339,"mtime":1607971692590,"results":"28","hashOfConfig":"17"},{"size":6044,"mtime":1608014367349,"results":"29","hashOfConfig":"17"},{"size":14232,"mtime":1608293812244,"results":"30","hashOfConfig":"17"},{"size":670,"mtime":1608014370354,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"neamvy",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\React\\ChatApp\\chatapp\\src\\index.js",[],["70","71"],"D:\\React\\ChatApp\\chatapp\\src\\reportWebVitals.js",[],"D:\\React\\ChatApp\\chatapp\\src\\App.js",["72"],"import React, { Component} from 'react';\nimport {\n    Route,\n    BrowserRouter as Router,\n    Switch\n} from 'react-router-dom';\nimport './App.css';\nimport Home from'./Pages/Home/Home';\nimport Chat from './Pages/Chat/Chat';\nimport Profile from './Pages/Profile/Profile';\nimport SignUp from './Pages/SignUp/Signup';\nimport Login from './Pages/Login/Login';\nimport firebase from './Services/firebase';\nimport {toast, ToastContainer} from 'react-toastify';\n\n\nclass App extends Component{\n\n    showToast = (type, message) =>{\n        switch(type){\n            case 0:\n                toast.warning(message)\n                break;\n            case 1:\n                toast.success(message)\n                default:\n                break;\n        }\n    }\n    constructor(){\n            super();\n            this.state={\n                authenticated: false,\n                loading: true\n            };\n    }\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user =>{\n            if(user){\n                this.setState({\n                    authenticated : true,\n                    loading : false\n                });\n            }else{\n                this.setState({\n                    authenticated : false,\n                    loading : false\n                });\n            }\n        })\n    }\n\n\n\nrender(){\n    return this.state.loading === true ? (\n        <div className=\"spinner-border text-success\" role='status'>\n            <span className=\"sr-only\">Yükleniyor...</span>\n            </div>\n    ): (\n        <Router>\n            <ToastContainer\n            autoClose={2000}\n            hideProgressBar={true}\n            position={toast.POSITION.TOP_CENTER}\n            />\n            <Switch>\n                <Route\n                exact\n                path=\"/\"\n                render= { props=> <Home {...props}/>}/>\n\n                <Route\n                path=\"/login\"\n                render= {props => <Login showToast={this.showToast}{...props}/>}\n                />\n\n                <Route\n                path=\"/profile\"\n                render= {props => <Profile showToast={this.showToast}{...props}/>}\n                />\n\n                <Route\n                path=\"/signup\"\n                render= {props => <SignUp showToast={this.showToast}{...props}/>}\n                />\n\n                <Route\n                path=\"/chat\"\n                render= {props => <Chat showToast={this.showToast}{...props}/>}\n                />\n            </Switch>\n        </Router>\n    )\n}\n}\nexport default App","D:\\React\\ChatApp\\chatapp\\src\\Services\\firebase.js",["73"],"import React from 'react'\r\nimport  firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAcRopcd1mG1LSJbhfMbl0EvZkuQPofnWc\",\r\n    authDomain: \"talkto-7b6ec.firebaseapp.com\",\r\n    databaseURL: \"https://talkto-7b6ec.firebaseio.com\",\r\n    projectId: \"talkto-7b6ec\",\r\n    storageBucket: \"talkto-7b6ec.appspot.com\",\r\n    messagingSenderId: \"151506466036\",\r\n    appId: \"1:151506466036:web:9a070f37b0cc639c131aa1\",\r\n    measurementId: \"G-EMCPKH7G9X\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Home\\Home.js",["74","75","76"],"import React, {Component} from 'react';\r\nimport Header from '../../Components/Header';\r\nimport Footer from '../../Components/Footer';\r\nimport './Home.css';\r\nimport Images from '../../ProjectImages/ProjectImages';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class HomePage extends Component{\r\n    render(){\r\n    return(\r\n       <div>\r\n            <Header/>\r\n            <div class=\"splash-container\">\r\n                <div class=\"splash\">\r\n                    <h1 class=\"splash-head\">WEB CHAT UYGULAMASI</h1>\r\n                    <p class=\"splash-subhead\">\r\n                        Hadi sevdiğin biriyle konuş.\r\n                    </p>\r\n                    <div id=\"custom-button-wrapper\">\r\n                        <Link to = '/Login'>\r\n                            <a class=\"my-super-cool-btn\">\r\n                                <div class=\"dots-container\">\r\n                                    <div class=\"dot\"></div>\r\n                                    <div class=\"dot\"></div>\r\n                                    <div class=\"dot\"></div>\r\n                                    <div class=\"dot\"></div>\r\n                                </div>\r\n                                <span className=\"buttoncooltext\">Başla</span>\r\n                            </a>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"content-wrapper\">\r\n                <div class=\"content\">\r\n                    <h2 class=\"content-head is-center\">Features of WebChat Application</h2>\r\n                </div>\r\n            </div>\r\n       </div>\r\n        \r\n    )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Chat\\Chat.js",["77","78","79","80","81","82","83","84","85"],"D:\\React\\ChatApp\\chatapp\\src\\Pages\\SignUp\\Signup.js",["86"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./Signup.css\";\r\nimport {Card} from 'react-bootstrap';\r\nimport firebase from '../../Services/firebase';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LoginString from '../Login/LoginStrings';\r\n\r\nexport default class SignUp extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state= {\r\n            email:\"\",\r\n            password:\"\",\r\n            userName:\"\",\r\n            error:null\r\n        }\r\n        this.handlechange=this.handlechange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n    }\r\n    handlechange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n            \r\n        });\r\n    }\r\n    async handleSubmit(event){\r\n        const {userName,password,email}=this.state; \r\n        event.preventDefault();\r\n        try{\r\n            firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async result =>{\r\n                firebase.firestore().collection('users')\r\n                .add({\r\n                    userName,\r\n                    userID:result.user.uid,\r\n                    email,\r\n                    password,\r\n                    URL:'',\r\n                    description:'',\r\n                    messages:[{notificationId:\"\",number: 0}]\r\n\r\n                }).then((docRef)=>{\r\n                    localStorage.setItem(LoginString.ID, result.user.uid);\r\n                    localStorage.setItem(LoginString.userName, userName);\r\n                    localStorage.setItem(LoginString.Email, email);\r\n                    localStorage.setItem(LoginString.Password, password);\r\n                    localStorage.setItem(LoginString.ProfilURL, \"\");\r\n                    localStorage.setItem(LoginString.UPLOAD_CHANGED, 'state_changed');\r\n                    localStorage.setItem(LoginString.Description, \"\");\r\n                    localStorage.setItem(LoginString.FirebaseDocumentId, docRef.id);\r\n                    this.setState({\r\n                        userName:'',\r\n                        password:'',\r\n                        url:'',\r\n                    });\r\n                    this.props.history.push(\"/chat\")\r\n                })\r\n                .catch((error) =>{\r\n                    console.error(\"Error adding document\",error) \r\n                })\r\n            })\r\n        } \r\n        catch(error){\r\n            document.getElementById('1').innerHTML=\"Giriş yaparken hata oluştu lütfen tekrar deneyin\"\r\n\r\n        }\r\n    }\r\n    render(){\r\n        const Signinsee={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center',\r\n            color:'White',\r\n            backgroundColor:'#1ebea5',\r\n            width:'100%',\r\n            boxShadow:\"0 5px 5px #808888\",\r\n            height:\"10rem\",\r\n            paddingTop:\"48px\",\r\n            opactiy:\"0.5\",\r\n            borderBottom:'5px solid green',\r\n        }\r\n        return (\r\n            <div>\r\n                <CssBaseline/>\r\n                <Card style={Signinsee}>\r\n                    <div>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign Up\r\n                        To\r\n                    </Typography>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                            <button class=\"btn\"><i class=\"fa fa-home\"></i>TALK TO</button>\r\n                        </Link>\r\n                    </div>\r\n                </Card>\r\n              <Card className=\"formacontrooutside\">\r\n                  <form className=\"customform\" noValidate onSubmit={this.handleSubmit}>\r\n\r\n                    <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Adres Örneği:abc@gmail.com\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                    onChange={this.handlechange}\r\n                    value={this.state.email}\r\n                    />\r\n                    \r\n                    <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    label=\"Şifre\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    autoFocus\r\n                    onChange={this.handlechange}\r\n                    value={this.state.password}\r\n                    />\r\n                    <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"userName\"\r\n                    label=\"İsim Giriniz\"\r\n                    name=\"userName\"\r\n                    autoComplete=\"userName\"\r\n                    autoFocus\r\n                    onChange={this.handlechange}\r\n                    value={this.state.userName}\r\n                    />\r\n                   <div className=\"CenterAliningItems\">\r\n                       <button class=\"button1\" type=\"submit\">\r\n                           <span>Kayıt Ol</span>\r\n                       </button>\r\n                   </div>\r\n                   <div>\r\n                       <p style={{color:'grey'}}>Bir Hesabınız var mı?</p>\r\n                       <Link to=\"/login\">\r\n                           Giriş Yap\r\n                       </Link>\r\n                   </div>\r\n                   <div className=\"error\">\r\n                       <p id='1' style={{color:'red'}}></p>\r\n                   </div>\r\n                  </form>\r\n              </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\Login.js",["87"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from '../../Services/firebase';\r\n\r\nimport LoginString from '../Login/LoginStrings';\r\nimport './Login.css';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typhography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport default class Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoading: true,\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n    }\r\n    handleChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n            \r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(localStorage.getItem(LoginString.ID)){\r\n            this.setState({isLoading: false}, ()=>{\r\n                this.setState({isLoading: false})\r\n                this.props.showToast(1,'Giriş başarılı')\r\n                this.props.history.push('./chat')\r\n            })\r\n        }else{\r\n            this.setState({isLoading: false})\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n\r\n        await firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(async result=>{\r\n            let user= result.user;\r\n            if(user){\r\n                await firebase.firestore().collection('users')\r\n                .where('id', \"==\", user.uid)\r\n                .get()\r\n                .then(function(querySnapShot){\r\n                    querySnapShot.forEach(function(doc){\r\n                        const currentdata = doc.data()\r\n                        localStorage.setItem(LoginString.FirebaseDocumentId, doc.id);\r\n                        localStorage.setItem(LoginString.ID, currentdata.id);\r\n                        localStorage.setItem(LoginString.userName, currentdata.name)\r\n                        localStorage.setItem(LoginString.Email, currentdata.email)\r\n                        localStorage.setItem(LoginString.Password, currentdata.password)\r\n                        localStorage.setItem(LoginString.ProfilURL, currentdata.ProfilURL)\r\n                        localStorage.setItem(LoginString.Description, currentdata.description)           \r\n                     })\r\n                })   \r\n            }\r\n            this.props.history.push('/chat')\r\n        }).catch(function(error){\r\n           document.getElementById('1').innerHTML=\"Yanlış E-mail/Password veya zayıf bağlantı\"\r\n        })\r\n    }\r\n    render(){\r\n        const paper={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center',\r\n            paddingLeft:'10px',\r\n            paddingRight:'10px'\r\n        }\r\n        const rightcomponent={\r\n            boxShadow:'0 80px 80px #808888',\r\n            backgroundColor:'smokegrey'\r\n        }\r\n        const root={\r\n            height:'100vh',\r\n            background:\"linear-gradient(90deg, #e3ffe7 0%, #d9e7ff 100%)\",\r\n\r\n            marginBottom:'50px'\r\n        }\r\n        const Signinsee={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center',\r\n            color:'White',\r\n            marginBottom:'20px',\r\n            backgroundColor:'#1ebea5',\r\n            width:'100%',\r\n            boxShadow:'0 5px 5px #808888',\r\n            height:\"10rem\",\r\n            paddingTop:\"48px\",\r\n            opacity:\"0.5\",\r\n            borderBottom:'5px solid green'\r\n\r\n        }\r\n        const form={\r\n            width:'100%',\r\n            marginTop:'50px'\r\n        }\r\n        const avatar={\r\n            backgroundColor:'green'\r\n        }\r\n        return(\r\n            <Grid container component=\"main\" style={root}>\r\n                <CssBaseline/>\r\n                <Grid item xs={1} sm={4} md={7} className=\"image\">\r\n                <div className=\"image1\"></div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={5} style={rightcomponent} elevation={6} square>\r\n                    <Card style={Signinsee}>\r\n                        <div>\r\n                            <Avatar style={avatar}>\r\n                                <LockOutlinedIcon width=\"50px\" height=\"50px\"/>\r\n                            </Avatar>\r\n                        </div>\r\n                        <div>\r\n                            <Typhography component=\"h1\" variant=\"h5\"\r\n                            Sign in\r\n                            To\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Link to=\"/\">\r\n                                <button class=\"btn\">\r\n                                    <i class=\"fa fa-home\"></i>\r\n                                    TalkTo\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </Card>\r\n                    <div style={paper}>\r\n                        <form style={form} noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Adres\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                    onChange={this.handleChange}\r\n                    value={this.state.email}\r\n                    />\r\n                     <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    label=\"Şifre\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    autoFocus\r\n                    onChange={this.handleChange}\r\n                    value={this.state.password}\r\n                    />\r\n                    <FormControlLabel\r\n                    control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                    label=\"Beni hatırla\"\r\n                    />\r\n                    <Typhography component=\"h6\" variant=\"h5\">\r\n                    {this.state.error ?(\r\n                          <p className=\"text-danger\">{this.state.error}</p>\r\n                      ):null}  \r\n                    </Typhography>\r\n                    \r\n                        <div className=\"CenterAliningItems\">\r\n                            <button class=\"button1\" type=\"submit\">\r\n                                <span>Giriş Yap</span>\r\n                            </button>\r\n\r\n                        </div>\r\n                  \r\n                  <div className=\"CenterAliningItems\">\r\n                      <p>Bir hesabınız yok mu?</p>\r\n                      <Link to=\"/signup\" variant=\"body2\">\r\n                          Kayıt Ol\r\n                      </Link>\r\n                  </div>\r\n                  <div className=\"error\">\r\n                      <p id='1' style={{color:'red'}}></p>\r\n                  </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Components\\Header.js",["88","89"],"import React from 'react';\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(){\r\n    return(\r\n        <header class=\"header-login-signup\">\r\n            <div class=\"header-limiter\">\r\n                <h1><a href=\"/\">Talk<span>To</span></a></h1>\r\n                <nav>\r\n                    <Link to=\"/\">Anasayfa</Link>\r\n                    <a class=\"selected\"><Link to=\"/\">Hakkında</Link></a>\r\n                    <a><Link to=\"/\">İletişim</Link></a>\r\n                </nav>\r\n                <ul>\r\n                    <li><Link to=\"/login\">Giriş</Link></li>\r\n                    <li><Link to=\"/signup\">Kayıt Ol</Link></li>\r\n                </ul>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","D:\\React\\ChatApp\\chatapp\\src\\Components\\Footer.js",[],"D:\\React\\ChatApp\\chatapp\\src\\ProjectImages\\ProjectImages.js",[],"D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\LoginStrings.js",[],"D:\\React\\ChatApp\\chatapp\\src\\Pages\\Profile\\Profile.js",[],"D:\\React\\ChatApp\\chatapp\\src\\Pages\\ChatBox\\ChatBox.js",["90","91","92"],"import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport ReactLoading from 'react-loading';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport firebase from '../../Services/firebase';\r\nimport images from '../../ProjectImages/ProjectImages';\r\nimport moment from 'react-moment';\r\nimport './ChatBox.css';\r\nimport LoginStrings from '../Login/LoginStrings';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport LoginString from '../Login/LoginStrings';\r\n\r\nexport default class ChatBox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoading: false,\r\n            isShowStiker: false,\r\n            inputValue:\"\"\r\n        }\r\n        this.currentUserName = localStorage.getItem(LoginString.userName)\r\n        this.currentUserId = localStorage.getItem(LoginString.ID)\r\n        this.currentUserPhoto = localStorage.getItem(LoginString.ProfilURL);\r\n        this.currentUserDocumentId = localStorage.getItem(LoginString.FirebaseDocumentId)\r\n        this.stateChanged = localStorage.getItem(LoginString.UPLOAD_CHANGED)\r\n        this.currentPeerUser = this.props.currentPeerUser\r\n        this.groupChatId = null;\r\n        this.listMessage=[];\r\n        this.currentPeerUserMessages =[];\r\n        this.removeListener = null;\r\n        this.currentPhotoFile = null;\r\n\r\n        firebase.firestore().collection('users').doc(this.currentPeerUser.documentkey).get()\r\n        .then((docRef)=>{\r\n            this.currentPeerUserMessages = docRef.data().messages\r\n        })\r\n    }\r\n    componentDidUpdate(){\r\n        this.scrollToBottom()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        if(newProps.currentPeerUser){\r\n            this.currentPeerUser = newProps.currentPeerUser\r\n            this.getListHistory()\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getListHistory()\r\n    }\r\n    componentWillUnmount(){\r\n        if(this.removeListener){\r\n            this.removeListener()\r\n        }\r\n    }\r\n    getListHistory =()=>{\r\n        if(this.removeListener){\r\n            this.removeListener()\r\n        }\r\n\r\n        this.listMessage.length=0\r\n        this.setState({isLoading: true})\r\n        if(\r\n            this.hashString(this.currentUserId) <=\r\n            this.hashString(this.currentPeerUser.id)\r\n        ){\r\n            this.groupChatId=`${this.currentUserId}-${this.currentPeerUser.id}`\r\n        }else{\r\n            this.groupChatId=`${this.currentPeerUser.id}-${this.currentUserId}`\r\n        }\r\n        this.removeListener = firebase.firestore()\r\n        .collection('Messages')\r\n        .doc(this.groupChatId)\r\n        .collection(this.groupChatId)\r\n        .onSnapshot(Snapshot=>{\r\n            Snapshot.docChanges().forEach(change=>{\r\n                if(change.type === LoginString.DOC){\r\n                    this.listMessage.push(change.doc.data())\r\n                }\r\n            })\r\n            this.setState({isLoading: false})\r\n        },\r\n        err=>{\r\n            this.props.showToast(0,err.toString())\r\n        })\r\n    }\r\n    onSendMessage =(content, type)=>{\r\n        let notificationMessages = []\r\n        if(this.state.isShowStiker && type ===2){\r\n            this.setState({isShowStiker: false})\r\n        }\r\n        if(content.trim() === ''){\r\n            return\r\n        }\r\n        const timestamp = moment()\r\n        .valueOf()\r\n        .toString()\r\n\r\n        const itemMessage ={\r\n            idFrom: this.currentUserId,\r\n            idTo: this.currentPeerUser.id,\r\n            timestamp: timestamp,\r\n            content: content.trim(),\r\n            type: type\r\n        }\r\n        firebase.firestore()\r\n        .collection('users')\r\n        .doc(this.groupChatId)\r\n        .collection(this.groupChatId)\r\n        .doc(timestamp)\r\n        .set(itemMessage)\r\n        .then(()=>{\r\n            this.setState({inputValue: ''})\r\n        })\r\n        this.currentPeerUserMessages.map((item)=>{\r\n            if(item.notificationId != this.currentUserId){\r\n                notificationMessages.push(\r\n                   {\r\n                    notificationId: item.notificationId,\r\n                    number: item.number\r\n                   }\r\n                )\r\n            }\r\n        })\r\n        firebase.firestore()\r\n        .collection('users')\r\n        .doc(this.currentPeerUser.documentkey)\r\n        .update({\r\n            messages: notificationMessages\r\n        })\r\n        .then((data)=>{})\r\n        .catch(err=>{\r\n            this.props.showToast(0, err.toString())\r\n        })\r\n    }\r\n    scrollToBottom =()=>{\r\n        if(this.messagesEnd){\r\n            this.messagesEnd.scrollIntoView({})\r\n        }\r\n    }\r\n    onKeyboardPress = event =>{\r\n            if(event.key === 'Enter'){\r\n                this.onSendMessage(this.state.inputValue, 0)\r\n            }\r\n        }\r\n    \r\n    openListSticker = () =>{\r\n        this.setState({isShowStiker: !this.state.isShowStiker})\r\n    \r\n}\r\n    render(){\r\n        return(\r\n           <Card className=\"viewChatBoard\">\r\n               <div className=\"headerChatBoard\">\r\n                   <img\r\n                   className=\"viewAvatarItem\"\r\n                   src={this.currentPeerUser.URL}\r\n                   alt=\"\"\r\n                   />  \r\n                   <span className=\"textHeaderChatBoard\">\r\n                       <p style={{fontSize:'20px'}}>{this.currentPeerUser.userName}</p>\r\n                    </span>               \r\n                   <div className=\"aboutme\">\r\n                   <span>\r\n                       <p>{this.currentPeerUser.description}</p>\r\n                   </span>\r\n                   </div>\r\n               </div>\r\n               <div className=\"viewListContentChat\">\r\n                {this.renderListMessage()}\r\n                <div\r\n                style={{float: 'left', clear: 'both'}}\r\n                ref={el => {\r\n                    this.messagesEnd = el\r\n                }}\r\n                />\r\n                </div>\r\n      <div className=\"viewBottom\">\r\n          <input\r\n          className=\"viewInput\"\r\n          placeholder=\"Bir mesaj yaz\"\r\n          value={this.state.inputValue}\r\n          onChange={event =>{\r\n              this.setState({inputValue: event.target.value})\r\n          }}\r\n          onKeyPress={this.onKeyboardPress()}\r\n          /> \r\n          <img\r\n          className=\"icSend\"\r\n          src={images.send2}\r\n          alt=\"\"\r\n          onClick={()=>{this.onSendMessage(this.state.inputValue, 0)}}\r\n          />\r\n      </div>\r\n          {this.state.isLoading ? (\r\n              <div className=\"viewLoading\">\r\n                  <ReactLoading\r\n                  type={'spin'}\r\n                  color={'#203152'}\r\n                  height={'3%'}\r\n                  width={'3%'}\r\n                  />\r\n              </div>\r\n          ): null}\r\n        \r\n           </Card>\r\n        )\r\n    }\r\n    renderListMessage =()=>{\r\n        if(this.listMessage.length > 0){\r\n            let viewListMessage = []\r\n            this.listMessage.forEach((item, index)=>{\r\n                if(item.idFrom === this.currentUserId){\r\n                    if(item.type === 0){\r\n                        viewListMessage.push(\r\n                            <div className=\"viewItemRight\" key={item.timestamp}>\r\n                                <span className=\"textContentItem\">{item.content}</span>\r\n                            </div>\r\n                        )\r\n                    }else if(item.type === 1){\r\n                        viewListMessage.push(\r\n                            <div className=\"viewItemRight2\" key={item.timestamp}>\r\n                                <img\r\n                                className=\"imgItemRight\"\r\n                                src={item.content}\r\n                                alt=\"\"\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }else{\r\n                        viewListMessage.push(\r\n                        <div className=\"viewItemRight3\" key={item.timestamp}>\r\n                            <img\r\n                            className=\"imgItemRight\"\r\n                            src={this.getGifİmage(item.content)}\r\n                            alt=\"\"\r\n                            />\r\n                        </div>\r\n            )\r\n                    }\r\n                }else {\r\n                if(item.type===0){\r\n                    viewListMessage.push(\r\n                        <div className=\"ViewWrapItemLeft\" key={item.timestamp}>\r\n                            <div className=\"ViewWrapItemLeft3\">\r\n                                {this.isLastMessageLeft(index)?(\r\n                                    <img\r\n                                    src={this.currentPeerUser.URL}\r\n                                    alt=\"avatar\"\r\n                                    className=\"peerAvatarLeft\"\r\n                                    />\r\n                                ): (\r\n                                    <div className=\"viewPaddingLeft\"/>\r\n                                )}\r\n                                <div className=\"viewItemLeft\">\r\n                                    <span className=\"textContentItem\">{item.content}</span>\r\n                                </div>\r\n                            </div>\r\n                            {this.isLastMessageLeft(index)?(\r\n                                <span className=\"textTimeLeft\">\r\n                                    <div className=\"time\">\r\n                                        {moment(Number(item.timestamp)).format('11')}\r\n                                    </div>\r\n                                </span>\r\n                            ): null}\r\n                        </div>\r\n                    )\r\n                }else if(item.type === 1){\r\n                    viewListMessage.push(\r\n                        <div className=\"ViewWrapItemLeft2\" key={item.timestamp}>\r\n                            <div className=\"ViewWrapItemLeft3\">\r\n                                {this.isLastMessageLeft(index)?(\r\n                                    <img\r\n                                    src={this.currentPeerUser.URL}\r\n                                    alt=\"avatar\"\r\n                                    className=\"peerAvatarLeft\"\r\n                                    />\r\n                                ): (\r\n                                    <div className=\"viewPaddingLeft\"/>\r\n                                )}\r\n                                <div className=\"viewItemLeft2\">\r\n                                    <img\r\n                                    src={item.content}\r\n                                    alt=\"content message\"\r\n                                    className=\"imgItemLeft\"\r\n                                    />\r\n                                </div>\r\n                        </div>\r\n                        {this.isLastMessageLeft(index)?(\r\n                                <span className=\"textTimeLeft\">\r\n                                    <div className=\"time\">\r\n                                        {moment(Number(item.timestamp)).formate('11')}\r\n                                    </div>\r\n                                </span>\r\n                            ): null}\r\n                            </div>\r\n                    )\r\n                }else{\r\n                    viewListMessage.push(\r\n                        <div className=\"ViewWrapItemLeft2\" key={item.timestamp}>\r\n                            <div className=\"ViewWrapItemLeft3\">\r\n                                {this.isLastMessageLeft(index)?(\r\n                                    <img\r\n                                    src={this.currentPeerUser.URL}\r\n                                    alt=\"avatar\"\r\n                                    className=\"peerAvatarLeft\"\r\n                                    />\r\n                                ): (\r\n                                    <div className=\"viewPaddingLeft\"/>\r\n                                )}\r\n                                <div className=\"viewItemLeft3\" key={item.timestamp}>\r\n                                <img\r\n                            className=\"imgItemRight\"\r\n                            src={this.getGifImage(item.content)}\r\n                            alt=\"\"\r\n                            />\r\n                                </div>\r\n                                </div>\r\n                                {this.isLastMessageLeft(index)?(\r\n                                <span className=\"textTimeLeft\">\r\n                                    <div className=\"time\">\r\n                                        {moment(Number(item.timestamp)).formate('11')}\r\n                                    </div>\r\n                                </span>\r\n                            ): null}\r\n                                </div>\r\n                    )\r\n                }              \r\n            }\r\n            })\r\n            return viewListMessage\r\n        }else{\r\n            return(\r\n                <div className=\"viewWrapSayHi\">\r\n                    <span className=\"textSayHi\">Yeni bir arkadaşına merhaba de</span>\r\n                    <img\r\n                    className=\"imgWaveHand\"\r\n                    src={images.wave_hand}\r\n                    alt=\"wave hand\"\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    hashString = str =>{\r\n        let hash = 0\r\n        for(let i=0;i<str.length;i++){\r\n            hash += Math.pow(str.charCodeAt(i)*31, str.length-i)\r\n            hash = hash & hash \r\n        }\r\n        return hash\r\n    }\r\n    isLastMessageLeft(index){\r\n        if(\r\n            (index + 1 < this.listMessage.length &&\r\n                this.listMessage[index+1].idFrom === this.currentUserId) ||\r\n                index=== this.listMessage.length -1\r\n                ){\r\n                    return true\r\n                } else{\r\n                    return false\r\n                }\r\n        \r\n    }\r\n    isLastMessageRight(index){\r\n        if(\r\n            (index + 1 < this.listMessage.length &&\r\n                this.listMessage[index+1].idFrom !== this.currentUserId) ||\r\n                index === this.listMessage.length -1\r\n        ) {\r\n            return true\r\n        } else{\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Welcome\\Welcome.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":26,"column":17,"nodeType":"99","messageId":"100","endLine":27,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"105","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"106","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":21,"column":29,"nodeType":"109","endLine":21,"endColumn":58},{"ruleId":"101","severity":1,"message":"110","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":47,"column":43,"nodeType":"113","messageId":"114","endLine":47,"endColumn":45},{"ruleId":"101","severity":1,"message":"115","line":97,"column":29,"nodeType":"103","messageId":"104","endLine":97,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":114,"column":38,"nodeType":"118","messageId":"119","endLine":114,"endColumn":40},{"ruleId":"111","severity":1,"message":"112","line":139,"column":40,"nodeType":"113","messageId":"114","endLine":139,"endColumn":42},{"ruleId":"116","severity":1,"message":"117","line":140,"column":28,"nodeType":"118","messageId":"119","endLine":140,"endColumn":30},{"ruleId":"116","severity":1,"message":"117","line":186,"column":53,"nodeType":"118","messageId":"119","endLine":186,"endColumn":55},{"ruleId":"111","severity":1,"message":"112","line":195,"column":46,"nodeType":"113","messageId":"114","endLine":195,"endColumn":48},{"ruleId":"116","severity":1,"message":"117","line":196,"column":28,"nodeType":"118","messageId":"119","endLine":196,"endColumn":30},{"ruleId":"101","severity":1,"message":"120","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":11},{"ruleId":"101","severity":1,"message":"121","line":1,"column":16,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":12,"column":21,"nodeType":"109","endLine":12,"endColumn":41},{"ruleId":"107","severity":1,"message":"108","line":13,"column":21,"nodeType":"109","endLine":13,"endColumn":24},{"ruleId":"101","severity":1,"message":"122","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":115,"column":48,"nodeType":"113","messageId":"114","endLine":115,"endColumn":50},{"ruleId":"116","severity":1,"message":"117","line":116,"column":36,"nodeType":"118","messageId":"119","endLine":116,"endColumn":38},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'Images' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ReactLoading' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'number' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Box' is defined but never used.","'Component' is defined but never used.","'LoginStrings' is defined but never used.","no-global-assign","no-unsafe-negation"]