[{"D:\\React\\ChatApp\\chatapp\\src\\index.js":"1","D:\\React\\ChatApp\\chatapp\\src\\reportWebVitals.js":"2","D:\\React\\ChatApp\\chatapp\\src\\App.js":"3","D:\\React\\ChatApp\\chatapp\\src\\Services\\firebase.js":"4","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Home\\Home.js":"5","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Chat\\Chat.js":"6","D:\\React\\ChatApp\\chatapp\\src\\Pages\\SignUp\\Signup.js":"7","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\Login.js":"8","D:\\React\\ChatApp\\chatapp\\src\\Components\\Header.js":"9","D:\\React\\ChatApp\\chatapp\\src\\Components\\Footer.js":"10","D:\\React\\ChatApp\\chatapp\\src\\ProjectImages\\ProjectImages.js":"11","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\LoginStrings.js":"12","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Profile\\Profile.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":2536,"mtime":1607864529869,"results":"17","hashOfConfig":"15"},{"size":565,"mtime":1607494963414,"results":"18","hashOfConfig":"15"},{"size":1638,"mtime":1607580076390,"results":"19","hashOfConfig":"15"},{"size":7506,"mtime":1607772040631,"results":"20","hashOfConfig":"15"},{"size":6035,"mtime":1607768067019,"results":"21","hashOfConfig":"15"},{"size":7675,"mtime":1607863176199,"results":"22","hashOfConfig":"15"},{"size":753,"mtime":1607584024576,"results":"23","hashOfConfig":"15"},{"size":566,"mtime":1607494781648,"results":"24","hashOfConfig":"15"},{"size":181,"mtime":1607861539180,"results":"25","hashOfConfig":"15"},{"size":333,"mtime":1607666040941,"results":"26","hashOfConfig":"15"},{"size":6019,"mtime":1607863440822,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"neamvy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\React\\ChatApp\\chatapp\\src\\index.js",[],["61","62"],"D:\\React\\ChatApp\\chatapp\\src\\reportWebVitals.js",[],"D:\\React\\ChatApp\\chatapp\\src\\App.js",["63"],"D:\\React\\ChatApp\\chatapp\\src\\Services\\firebase.js",["64"],"import React from 'react'\r\nimport  firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAcRopcd1mG1LSJbhfMbl0EvZkuQPofnWc\",\r\n    authDomain: \"talkto-7b6ec.firebaseapp.com\",\r\n    databaseURL: \"https://talkto-7b6ec.firebaseio.com\",\r\n    projectId: \"talkto-7b6ec\",\r\n    storageBucket: \"talkto-7b6ec.appspot.com\",\r\n    messagingSenderId: \"151506466036\",\r\n    appId: \"1:151506466036:web:9a070f37b0cc639c131aa1\",\r\n    measurementId: \"G-EMCPKH7G9X\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Home\\Home.js",["65","66","67"],"import React, {Component} from 'react';\r\nimport Header from '../../Components/Header';\r\nimport Footer from '../../Components/Footer';\r\nimport './Home.css';\r\nimport Images from '../../ProjectImages/ProjectImages';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class HomePage extends Component{\r\n    render(){\r\n    return(\r\n       <div>\r\n            <Header/>\r\n            <div class=\"splash-container\">\r\n                <div class=\"splash\">\r\n                    <h1 class=\"splash-head\">WEB CHAT UYGULAMASI</h1>\r\n                    <p class=\"splash-subhead\">\r\n                        Hadi sevdiğin biriyle konuş.\r\n                    </p>\r\n                    <div id=\"custom-button-wrapper\">\r\n                        <Link to = '/Login'>\r\n                            <a class=\"my-super-cool-btn\">\r\n                                <div class=\"dots-container\">\r\n                                    <div class=\"dot\"></div>\r\n                                    <div class=\"dot\"></div>\r\n                                    <div class=\"dot\"></div>\r\n                                    <div class=\"dot\"></div>\r\n                                </div>\r\n                                <span className=\"buttoncooltext\">Başla</span>\r\n                            </a>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"content-wrapper\">\r\n                <div class=\"content\">\r\n                    <h2 class=\"content-head is-center\">Features of WebChat Application</h2>\r\n                </div>\r\n            </div>\r\n       </div>\r\n        \r\n    )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Chat\\Chat.js",["68","69","70","71","72","73"],"import React from 'react'\r\nimport LoginString from \"../Login/LoginStrings\";\r\nimport firebase from \"../../Services/firebase\";\r\nimport './Chat.css';\r\nimport ReactLoading from 'react-loading';\r\n\r\nexport default class Chat extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isLoading: true,\r\n            isOpenDialogConfirmLogout: false,\r\n            currentPeerUser: null,\r\n            displayedContactSwitchedNotification:[],\r\n            displayedContacts: []\r\n        }\r\n        this.currentUserName = localStorage.getItem(LoginString.Name)\r\n        this.currentUserId = localStorage.getItem(LoginString.ID)\r\n        this.currentUserPhoto = localStorage.getItem(LoginString.PhotoURL);\r\n        this.currentUserDocumentId = localStorage.getItem(LoginString.FirebaseDocumentId)\r\n\r\n        this.currentUserMessages=[]\r\n        this.searchUsers = []\r\n        this.notificationMessagesErase = []\r\n        this.onProfileClick = this.onProfileClick.bind(this);\r\n        this.getListUser = this.getListUser.bind(this);\r\n        this.renderListUser = this.renderListUser.bind(this);\r\n        this.getClassnameforUserandNotification = this.getClassnameforUserandNotification.bind(this);\r\n        this.notificationErase = this.notificationErase.bind(this);\r\n        this.updaterenderList = this.updaterenderList.bind(this);\r\n    }\r\n    logout = ()=>{\r\n    firebase.auth().signOut()\r\n    this.props.history.push('/')\r\n    localStorage.clear()\r\n\r\n    }\r\n    onProfileClick = ()=>{\r\nthis.props.history.push('/profile')\r\n    }\r\n    componentDidMount (){\r\n        firebase.firestore().collection('users').doc(this.currentUserDocumentId).get()\r\n        .then((doc)=>{\r\n            doc.data().messages.map((item)=>{\r\n                this.currentUserMessages.push({\r\n                    notificationId: item.notificationId,\r\n                    number: item.number\r\n                })\r\n            })\r\n            this.setState({\r\n                displayedContactSwitchedNotification: this.currentUserMessages\r\n            })\r\n        })\r\n        this.getListUser()\r\n    }\r\n    getListUser = async()=>{\r\n        const result = await firebase.firestore().collection('users').get();\r\n        if(result.docs.length > 0){\r\n            let listUsers = []\r\n            listUsers = [...result.docs]\r\n            listUsers.forEach((item, index)=>{\r\n                this.searchUsers.push(\r\n                    {\r\n                        key: index,\r\n                        documentKey: item.id,\r\n                        id: item.data().id,\r\n                        name: item.data().name,\r\n                        messages: item.data().messages,\r\n                        PhotoURL: item.data().PhotoURL,\r\n                        description: item.data().description\r\n                    }\r\n                )\r\n\r\n            })\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n        }\r\n        this.renderListUser()\r\n\r\n    }\r\n    getClassnameforUserandNotification = (itemId)=>{\r\n        let number = 0\r\n        let className = \"\"\r\n        let check = false;\r\n        if(this.state.currentPeerUser && \r\n            this.state.currentPeerUser.id === itemId){\r\n                className = 'viewWrapItemFocused'\r\n            }else{\r\n                this.state.displayedContactSwitchedNotification.forEach((item)=>{\r\n                    if(item.notificationId.length > 0){\r\n                        if(item.notificationId === itemId){\r\n                            check = true\r\n                            number = item.number\r\n\r\n                        }\r\n                    }\r\n                })\r\n                if(check === true){\r\n                    className = \"viewWrapItemNotification\"\r\n                }\r\n                else{\r\n                    className = 'viewWrapItem'\r\n                }\r\n            }\r\n            return className\r\n    }\r\n    notificationErase =(itemId)=>{\r\n        this.state.displayedContactSwitchedNotification.forEach((el)=>{\r\n            if(el.notificationId.length > 0){\r\n                if(el.notificationId != itemId){\r\n                    this.notificationMessagesErase.push(\r\n                        {\r\n                            notificationId: el.notificationId,\r\n                            number: el.number\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n        })\r\n        this.updaterenderList()\r\n    }\r\n    updaterenderList =()=>{\r\n        firebase.firestore().collection('users').doc(this.currentUserDocumentId).update(\r\n            {messages: this.notificationMessagesErase}\r\n        )\r\n        this.setState({\r\n            displayedContactSwitchedNotification: this.notificationMessagesErase\r\n        })\r\n    }\r\n\r\n    renderListUser = ()=>{\r\n        if(this.searchUsers.length > 0){\r\n            let viewListUser = []\r\n            let classname =\"\"\r\n            this.searchUsers.map((item)=>{\r\n                if(item.id != this.currentUserId){\r\n                    classname= this.getClassnameforUserandNotification(item.id)\r\n                    viewListUser.push(\r\n                        <button\r\n                        id={item.key}\r\n                        className = {classname}\r\n                        onClick = {()=>{\r\n                            this.notificationErase(item.id)\r\n                            this.setState({currentPeerUser: item})\r\n                            document.getElementById(item.key).style.backgroundColor = '#fff'\r\n                            document.getElementById(item.key).style.color = '#fff'\r\n                        }}\r\n                        >\r\n\r\n                            <img\r\n                            className = \"viewAvatarItem\"\r\n                            src = {item.PhotoURL}\r\n                            alt = \"\"\r\n                            />\r\n                            <div className=\"viewWrapContentItem\">\r\n                                <span className=\"textItem\">\r\n                                    {`Name : ${item.name}`}\r\n                                </span>\r\n                            </div>\r\n                            {classname === 'viewWrapItemNotification' ?\r\n                            <div className=\"notificationparagraph\">\r\n                            <p id={item.key} className=\"newmessages\">Yeni Mesajlar</p>\r\n                            </div>: null}\r\n                        </button>\r\n                    )\r\n                        \r\n                    \r\n                }\r\n            })\r\n            this.setState({\r\n                displayedContacts: viewListUser\r\n            })\r\n        }else{\r\n            console.log(\"No User is Present\")\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"root\">\r\n                <div className=\"body\">\r\n                    <div className=\"viewListUser\">\r\n                        <div className=\"profileviewleftside\">\r\n                            <img\r\n                            className=\"ProfilePicture\"\r\n                            alt=\"\"\r\n                            src={this.currentUserPhoto}\r\n                            onClick={this.onProfileClick}\r\n                            />\r\n                            <button className=\"Logout\" onClick={this.logout}>Çıkış Yap</button>\r\n                        </div>\r\n                        {this.state.displayedContacts}\r\n                    </div>\r\n                </div>               \r\n            </div>\r\n        )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Pages\\SignUp\\Signup.js",["74"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./Signup.css\";\r\nimport {Card} from 'react-bootstrap';\r\nimport firebase from '../../Services/firebase';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LoginString from '../Login/LoginStrings';\r\n\r\nexport default class SignUp extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state= {\r\n            email:\"\",\r\n            password:\"\",\r\n            name:\"\",\r\n            error:null\r\n        }\r\n        this.handlechange=this.handlechange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n    }\r\n    handlechange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n            \r\n        });\r\n    }\r\n    async handleSubmit(event){\r\n        const {name,password,email}=this.state; \r\n        event.preventDefault();\r\n        try{\r\n            firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async result =>{\r\n                firebase.firestore().collection('users')\r\n                .add({\r\n                    name,\r\n                    id:result.user.uid,\r\n                    email,\r\n                    password,\r\n                    URL:'',\r\n                    description:'',\r\n                    messages:[{notificationId:\"\",number: 0}]\r\n\r\n                }).then((docRef)=>{\r\n                    localStorage.setItem(LoginString.ID, result.user.uid);\r\n                    localStorage.setItem(LoginString.Name, name);\r\n                    localStorage.setItem(LoginString.Email, email);\r\n                    localStorage.setItem(LoginString.Password, password);\r\n                    localStorage.setItem(LoginString.PhotoURL, \"\");\r\n                    localStorage.setItem(LoginString.UPLOAD_CHANGED, 'state_changed');\r\n                    localStorage.setItem(LoginString.Description, \"\");\r\n                    localStorage.setItem(LoginString.FirebaseDocumentId, docRef.id);\r\n                    this.setState({\r\n                        name:'',\r\n                        password:'',\r\n                        url:'',\r\n                    });\r\n                    this.props.history.push(\"/chat\")\r\n                })\r\n                .catch((error) =>{\r\n                    console.error(\"Error adding document\",error) \r\n                })\r\n            })\r\n        } \r\n        catch(error){\r\n            document.getElementById('1').innerHTML=\"Giriş yaparken hata oluştu lütfen tekrar deneyin\"\r\n\r\n        }\r\n    }\r\n    render(){\r\n        const Signinsee={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center',\r\n            color:'White',\r\n            backgroundColor:'#1ebea5',\r\n            width:'100%',\r\n            boxShadow:\"0 5px 5px #808888\",\r\n            height:\"10rem\",\r\n            paddingTop:\"48px\",\r\n            opactiy:\"0.5\",\r\n            borderBottom:'5px solid green',\r\n        }\r\n        return (\r\n            <div>\r\n                <CssBaseline/>\r\n                <Card style={Signinsee}>\r\n                    <div>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign Up\r\n                        To\r\n                    </Typography>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                            <button class=\"btn\"><i class=\"fa fa-home\"></i>WebChat</button>\r\n                        </Link>\r\n                    </div>\r\n                </Card>\r\n              <Card className=\"formacontrooutside\">\r\n                  <form className=\"customform\" noValidate onSubmit={this.handleSubmit}>\r\n\r\n                    <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Adres Örneği:abc@gmail.com\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                    onChange={this.handlechange}\r\n                    value={this.state.email}\r\n                    />\r\n                    \r\n                    <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    label=\"Şifre\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    autoFocus\r\n                    onChange={this.handlechange}\r\n                    value={this.state.password}\r\n                    />\r\n                    <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    label=\"İsim Giriniz\"\r\n                    name=\"name\"\r\n                    autoComplete=\"name\"\r\n                    autoFocus\r\n                    onChange={this.handlechange}\r\n                    value={this.state.name}\r\n                    />\r\n                   <div className=\"CenterAliningItems\">\r\n                       <button class=\"button1\" type=\"submit\">\r\n                           <span>Kayıt Ol</span>\r\n                       </button>\r\n                   </div>\r\n                   <div>\r\n                       <p style={{color:'grey'}}>Bir Hesabınız var mı?</p>\r\n                       <Link to=\"/login\">\r\n                           Giriş Yap\r\n                       </Link>\r\n                   </div>\r\n                   <div className=\"error\">\r\n                       <p id='1' style={{color:'red'}}></p>\r\n                   </div>\r\n                  </form>\r\n              </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\Login.js",["75"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from '../../Services/firebase';\r\n\r\nimport LoginString from '../Login/LoginStrings';\r\nimport './Login.css';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typhography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport default class Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isLoading: true,\r\n            error: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n    }\r\n    handleChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n            \r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(localStorage.getItem(LoginString.ID)){\r\n            this.setState({isLoading: false}, ()=>{\r\n                this.setState({isLoading: false})\r\n                this.props.showToast(1,'Giriş başarılı')\r\n                this.props.history.push('./chat')\r\n            })\r\n        }else{\r\n            this.setState({isLoading: false})\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        this.setState({error:\"\"});\r\n\r\n        await firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(async result=>{\r\n            let user= result.user;\r\n            if(user){\r\n                await firebase.firestore().collection('users')\r\n                .where('id', \"==\", user.uid)\r\n                .get()\r\n                .then(function(querySnapShot){\r\n                    querySnapShot.forEach(function(doc){\r\n                        const currentdata = doc.data()\r\n                        localStorage.setItem(LoginString.FirebaseDocumentId, doc.id);\r\n                        localStorage.setItem(LoginString.ID, currentdata.id);\r\n                        localStorage.setItem(LoginString.Name, currentdata.name)\r\n                        localStorage.setItem(LoginString.Email, currentdata.email)\r\n                        localStorage.setItem(LoginString.Password, currentdata.password)\r\n                        localStorage.setItem(LoginString.PhotoURL, currentdata.PhotoURL)\r\n                        localStorage.setItem(LoginString.Description, currentdata.description)           \r\n                     })\r\n                })   \r\n            }\r\n            this.props.history.push('/chat')\r\n        }).catch(function(error){\r\n            this.setState({\r\n                error: \"Bir hata oluştu lütfen tekrar deneyiniz\"\r\n            })\r\n        })\r\n    }\r\n    render(){\r\n        const paper={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center',\r\n            paddingLeft:'10px',\r\n            paddingRight:'10px'\r\n        }\r\n        const rightcomponent={\r\n            boxShadow:'0 80px 80px #808888',\r\n            backgroundColor:'smokegrey'\r\n        }\r\n        const root={\r\n            height:'100vh',\r\n            background:\"linear-gradient(90deg, #e3ffe7 0%, #d9e7ff 100%)\",\r\n\r\n            marginBottom:'50px'\r\n        }\r\n        const Signinsee={\r\n            display:'flex',\r\n            flexDirection:'column',\r\n            alignItems:'center',\r\n            color:'White',\r\n            marginBottom:'20px',\r\n            backgroundColor:'#1ebea5',\r\n            width:'100%',\r\n            boxShadow:'0 5px 5px #808888',\r\n            height:\"10rem\",\r\n            paddingTop:\"48px\",\r\n            opacity:\"0.5\",\r\n            borderBottom:'5px solid green'\r\n\r\n        }\r\n        const form={\r\n            width:'100%',\r\n            marginTop:'50px'\r\n        }\r\n        const avatar={\r\n            backgroundColor:'green'\r\n        }\r\n        return(\r\n            <Grid container component=\"main\" style={root}>\r\n                <CssBaseline/>\r\n                <Grid item xs={1} sm={4} md={7} className=\"image\">\r\n                <div className=\"image1\"></div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={8} md={5} style={rightcomponent} elevation={6} square>\r\n                    <Card style={Signinsee}>\r\n                        <div>\r\n                            <Avatar style={avatar}>\r\n                                <LockOutlinedIcon width=\"50px\" height=\"50px\"/>\r\n                            </Avatar>\r\n                        </div>\r\n                        <div>\r\n                            <Typhography component=\"h1\" variant=\"h5\"\r\n                            Sign in\r\n                            To\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Link to=\"/\">\r\n                                <button class=\"btn\">\r\n                                    <i class=\"fa fa-home\"></i>\r\n                                    WebChat\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </Card>\r\n                    <div style={paper}>\r\n                        <form style={form} noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Adres\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                    onChange={this.handleChange}\r\n                    value={this.state.email}\r\n                    />\r\n                     <TextField \r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    label=\"Şifre\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    autoFocus\r\n                    onChange={this.handleChange}\r\n                    value={this.state.password}\r\n                    />\r\n                    <FormControlLabel\r\n                    control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                    label=\"Beni hatırla\"\r\n                    />\r\n                    <Typhography component=\"h6\" variant=\"h5\">\r\n                    {this.state.error ?(\r\n                          <p className=\"text-danger\">{this.state.error}</p>\r\n                      ):null}  \r\n                    </Typhography>\r\n                    \r\n                        <div className=\"CenterAliningItems\">\r\n                            <button class=\"button1\" type=\"submit\">\r\n                                <span>Giriş Yap</span>\r\n                            </button>\r\n\r\n                        </div>\r\n                  \r\n                  <div className=\"CenterAliningItems\">\r\n                      <p>Bir hesabınız yok mu?</p>\r\n                      <Link to=\"/signup\" variant=\"body2\">\r\n                          Kayıt Ol\r\n                      </Link>\r\n                  </div>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}","D:\\React\\ChatApp\\chatapp\\src\\Components\\Header.js",["76","77"],"import React from 'react';\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(){\r\n    return(\r\n        <header class=\"header-login-signup\">\r\n            <div class=\"header-limiter\">\r\n                <h1><a href=\"/\">Chat<span>App</span></a></h1>\r\n                <nav>\r\n                    <Link to=\"/\">Anasayfa</Link>\r\n                    <a class=\"selected\"><Link to=\"/\">Hakkında</Link></a>\r\n                    <a><Link to=\"/\">İletişim</Link></a>\r\n                </nav>\r\n                <ul>\r\n                    <li><Link to=\"/login\">Giriş</Link></li>\r\n                    <li><Link to=\"/signup\">Kayıt Ol</Link></li>\r\n                </ul>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","D:\\React\\ChatApp\\chatapp\\src\\Components\\Footer.js",[],"D:\\React\\ChatApp\\chatapp\\src\\ProjectImages\\ProjectImages.js",[],"D:\\React\\ChatApp\\chatapp\\src\\Pages\\Login\\LoginStrings.js",[],"D:\\React\\ChatApp\\chatapp\\src\\Pages\\Profile\\Profile.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":26,"column":17,"nodeType":"84","messageId":"85","endLine":27,"endColumn":23},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":14},{"ruleId":"86","severity":1,"message":"91","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":21,"column":29,"nodeType":"94","endLine":21,"endColumn":58},{"ruleId":"86","severity":1,"message":"95","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":44,"column":43,"nodeType":"98","messageId":"99","endLine":44,"endColumn":45},{"ruleId":"86","severity":1,"message":"100","line":94,"column":29,"nodeType":"88","messageId":"89","endLine":94,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":111,"column":38,"nodeType":"103","messageId":"104","endLine":111,"endColumn":40},{"ruleId":"96","severity":1,"message":"97","line":136,"column":40,"nodeType":"98","messageId":"99","endLine":136,"endColumn":42},{"ruleId":"101","severity":1,"message":"102","line":137,"column":28,"nodeType":"103","messageId":"104","endLine":137,"endColumn":30},{"ruleId":"86","severity":1,"message":"105","line":9,"column":8,"nodeType":"88","messageId":"89","endLine":9,"endColumn":11},{"ruleId":"86","severity":1,"message":"106","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":12,"column":21,"nodeType":"94","endLine":12,"endColumn":41},{"ruleId":"92","severity":1,"message":"93","line":13,"column":21,"nodeType":"94","endLine":13,"endColumn":24},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'Images' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ReactLoading' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'number' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Box' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]